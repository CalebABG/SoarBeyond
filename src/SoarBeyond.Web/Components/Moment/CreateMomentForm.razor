@namespace SoarBeyond.Web.Components

@inherits SoarBeyondComponentBase

@using static SoarBeyond.Shared.Extensions.CommonExtensions

<div @attributes="@ComponentAttributes"
     class="@ComponentClasses"
     style="@ComponentStyles">
    <div class="card-body">
        <h5 class="card-title mb-3">
            Create a Moment
        </h5>

        <div class="card-text">
            <EditForm Model="@_moment" OnValidSubmit="HandleValidSubmitAsync">
                <FluentValidationValidator />

                <div class="container">
                    <div class="form-group mb-3">
                        <label class="form-label">Date</label>
                        <InputDate class="form-control" @bind-Value="_moment.CreatedDate" Type="InputDateType.Date" />
                        <ValidationMessage For="@(() => _moment.CreatedDate)"/>
                    </div>

                    <div class="form-group mb-3">
                        <label class="form-label">@LabelFor(() => _moment.Title)</label>
                        <InputText class="form-control" @bind-Value="_moment.Title" />
                        <ValidationMessage For="@(() => _moment.Title)" />
                    </div>

                    <div class="form-group mb-3">
                        <label class="form-label">@LabelFor(() => _moment.Content)</label>
                        <InputTextArea class="form-control" @bind-Value="_moment.Content" />
                        <ValidationMessage For="@(() => _moment.Content)" />
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-12"><label class="form-label">Color</label></div>
                            <div class="col-12"><input class="w-100" type="color" @bind-value="_moment.Color"></div>
                        </div>
                        <ValidationMessage For="@(() => _moment.Color)"/>
                    </div>

                    @if (_addNotes)
                    {
                        <BSDialog ExtraClass="modal-lg modal-dialog-centered" 
                                  @bind-ShowDialog="_addNotes">
                            <DialogTitle>
                                <h5 class="m-0">Add a Note</h5>
                            </DialogTitle>

                            <DialogBody>
                                <CreateNoteForm OnValidSubmit="AddNote"/>
                            </DialogBody>
                        </BSDialog>
                    }

                    @if (_moment.Notes.Count > 0)
                    {
                        <hr class="my-4" />

                        <h5 class="mb-3">Notes</h5>

                        <CollectionView Context="note"
                                        Class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4"
                                        Data="@_moment.Notes">
                            <ItemTemplate>
                                <div @key="@note">
                                    <NoteView Note="@note"
                                              ShowHeader="@false"
                                              ShowActionButtons="@true"
                                              OnDeleteNote="RemoveNote" />
                                </div>
                            </ItemTemplate>
                        </CollectionView>
                    }
                </div>

                <div class="btn-group mt-4" role="group">
                    <BSButton Type="submit" Disabled="@IsBusy">
                        Create
                    </BSButton>

                    <BSButton Class="btn btn-secondary"
                              Disabled="@IsBusy"
                              ShowSpinner="@false"
                              @onclick="ToggleNoteDialog">
                        Add Notes
                    </BSButton>
                </div>
            </EditForm>
        </div>
    </div>
</div>